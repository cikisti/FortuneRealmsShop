using { /Fortnite.com/Devices }
using { /Verse.org/Simulation }
using { /UnrealEngine.com/Temporary/Diagnostics }
using { /Fortnite.com/Characters }
using { /Verse.org/Random}
using { /Fortnite.com/Game }

Game_Manager := class(creative_device):
    var PlayersMap:[player]Custom_Player = map{}


                                # Bindings and Device Links

    # Player ID

    @editable
    P1Spawner:player_spawner_device = player_spawner_device {}

    # Buying Bindings

    @editable
    GetYCardButton:button_device = button_device{}

    # Card Activation Triggers

    @editable
    YCardTrigger:trigger_device = trigger_device {}

    # Weapon Granters

    @editable
    PistolGranter:item_granter_device = item_granter_device {}

    @editable
    PistolAmmoGranter:item_granter_device = item_granter_device {}

    @editable
    ShotgunGranter:item_granter_device = item_granter_device {}

    @editable
    ShotgunAmmoGranter:item_granter_device = item_granter_device {}

    @editable
    SniperGranter:item_granter_device = item_granter_device {}

    @editable
    SniperAmmoGranter:item_granter_device = item_granter_device {}

    @editable
    KatanaGranter:item_granter_device = item_granter_device {}


    # Weapon Buttons

    @editable
    PistolButton:button_device = button_device{}

    @editable
    PistolAmmoButton:button_device = button_device{}

    @editable
    ShotgunButton:button_device = button_device{}

    @editable
    ShotgunAmmoButton:button_device = button_device{}

    @editable
    SniperButton:button_device = button_device{}

    @editable
    SniperAmmoButton:button_device = button_device{}

    @editable
    KatanaButton:button_device = button_device{}

    # Powerup Definitions

    @editable
    MedKitGranter:item_granter_device = item_granter_device {}

    @editable
    GlowActivation:visual_effect_powerup_device = visual_effect_powerup_device {}

    @editable
    DamageUpgrade:damage_amplifier_powerup_device = damage_amplifier_powerup_device {}



    # Powerup Buttons

    @editable
    MedKitButton:button_device = button_device {}

    @editable
    GlowButton:button_device = button_device {}

    @editable
    DamageUpgradeButton:button_device = button_device {}



    #Info Devices

    @editable
    NoAuraMessageDevice:hud_message_device = hud_message_device{}

    @editable
    KarmaCreditsTimer:timer_device = timer_device{}

    #Y Collectibles

    @editable
    Collectible1:collectible_object_device = collectible_object_device{}

    @editable
    Collectible2:collectible_object_device = collectible_object_device{}

    @editable
    Collectible3:collectible_object_device = collectible_object_device{}

    @editable
    Collectible4:collectible_object_device = collectible_object_device{}

    @editable
    Collectible5:collectible_object_device = collectible_object_device{}

    @editable
    Collectible6:collectible_object_device = collectible_object_device{}

    @editable
    Collectible7:collectible_object_device = collectible_object_device{}

    @editable
    AuraReward:trigger_device = trigger_device {}

    #Y Card Messages

    @editable
    YCardOne:trigger_device = trigger_device {}

    @editable
    YCardTwo:trigger_device = trigger_device {}

    @editable
    YCardThree:trigger_device = trigger_device {}

    @editable
    NoCardsAvailableMessageDevice:hud_message_device = hud_message_device{}

    





    # Costs
    CollectibleValue:int = 678
    AuraRewardValue:int = 6
    CardCost:int = 5

    # Weapon Costs
    PistolCost:int = 6
    PistolAmmoCost:int = 5
    ShotgunCost:int = 8
    ShotgunAmmoCost:int = 6
    SniperCost:int = 1
    SniperAmmoCost:int = 8
    KatanaCost:int = 2

    # Powerup Cost
    MedKitCost:int = 5
    GlowCost:int = 16
    DamageCost:int = 25


    TimerValue:int = 34 

   
    

    

    OnBegin<override>()<suspends>:void=

        #Y Cards
       

        #Multiplayer settings
        P1Spawner.SpawnedEvent.Subscribe(OnPlayerAdded)

        #Y Collectibles that grant Karma Credits
        Collectible1.CollectedEvent.Subscribe(OnCollect)
        Collectible2.CollectedEvent.Subscribe(OnCollect)
        Collectible3.CollectedEvent.Subscribe(OnCollect)
        Collectible4.CollectedEvent.Subscribe(OnCollect)
        Collectible5.CollectedEvent.Subscribe(OnCollect)
        Collectible6.CollectedEvent.Subscribe(OnCollect)
        Collectible7.CollectedEvent.Subscribe(OnCollect)

        AuraReward.TriggeredEvent.Subscribe(RewardHouse)

        # Buttons that Trigger Buying Added in Game Tracking

        GetYCardButton.InteractedWithEvent.Subscribe(OnCardButton)

        PistolButton.InteractedWithEvent.Subscribe(PistolGrant)
        PistolAmmoButton.InteractedWithEvent.Subscribe(PistolAmmoGrant)

        ShotgunButton.InteractedWithEvent.Subscribe(ShotgunGrant)
        ShotgunAmmoButton.InteractedWithEvent.Subscribe(ShotgunAmmoGrant)

        SniperButton.InteractedWithEvent.Subscribe(SniperGrant)
        SniperAmmoButton.InteractedWithEvent.Subscribe(SniperAmmoGrant)

        KatanaButton.InteractedWithEvent.Subscribe(KatanaGrant)

        MedKitButton.InteractedWithEvent.Subscribe(MedKitGrant)
        GlowButton.InteractedWithEvent.Subscribe(GlowGrant)
        DamageUpgradeButton.InteractedWithEvent.Subscribe(DamageGrant)


        
        # Timer
        KarmaCreditsTimer.SuccessEvent.Subscribe(OnKarmaCreditsTimer)


        # Definitions and Actions
    
        #Player ID

    OnPlayerAdded(Agent:agent):void=
        if:
            PlayerObj := player[Agent]
        then:
            if(PlayerExists := PlayersMap[PlayerObj]):

            else:
                if:
                    FC := Agent.GetFortCharacter[]
                then:

                    CustomPlayer:Custom_Player = Custom_Player{Player := Agent}
                    option:
                        set PlayersMap[PlayerObj] = CustomPlayer
                    CustomPlayer.InitiateUI()


        # Card Buying Actions


    OnCardButton(Agent:agent):void=
        if (PlayerObj := player[Agent]):
            if (CustomPlayer:Custom_Player = PlayersMap[PlayerObj]):
                if (CustomPlayer.AvailableCardIndices.Length = 0):
                    NoCardsAvailableMessageDevice.Show(Agent)
                else:
                    DoWeHaveEnough:logic = CustomPlayer.CheckKarmaCredits(CardCost)
                    if (DoWeHaveEnough = true):
                        # Pick a random index from the available cards
                        RandomIndex:int = GetRandomInt(0, CustomPlayer.AvailableCardIndices.Length - 1)
                        if (CardIndex := CustomPlayer.AvailableCardIndices[RandomIndex]):
                            # Show the corresponding card
                            if (CardIndex = 1):
                                YCardOne.Trigger(Agent)
                            else if (CardIndex = 2):
                                YCardTwo.Trigger(Agent)
                            else if (CardIndex = 3):
                                YCardThree.Trigger(Agent)
                            
                            # Remove the drawn card from the array
                            if (NewIndices := CustomPlayer.AvailableCardIndices.RemoveElement[RandomIndex]):
                                set CustomPlayer.AvailableCardIndices = NewIndices
                            
                            # Deduct Karma Credits
                            CustomPlayer.RemoveKarmaCredits(CardCost)
                        else:
                            NoCardsAvailableMessageDevice.Show(Agent)
                    else:
                        NoAuraMessageDevice.Show(Agent)






        # Weapon Buying Actions

        # Pistol and Ammo

    PistolGrant(Agent:agent):void=
         if(PlayerObj := player[Agent]):
            if(CustomPlayer:Custom_Player = PlayersMap[PlayerObj]):
                 DoWeHaveEnough:logic = CustomPlayer.CheckKarmaCredits(PistolCost)
                 if(DoWeHaveEnough = true):
                    CustomPlayer.RemoveKarmaCredits(PistolCost)
                    PistolGranter.GrantItem(Agent)
                else:
                    NoAuraMessageDevice.Show(Agent)    

    PistolAmmoGrant(Agent:agent):void=
         if(PlayerObj := player[Agent]):
            if(CustomPlayer:Custom_Player = PlayersMap[PlayerObj]):
                 DoWeHaveEnough:logic = CustomPlayer.CheckKarmaCredits(PistolAmmoCost)
                 if(DoWeHaveEnough = true):
                    CustomPlayer.RemoveKarmaCredits(PistolAmmoCost)
                    PistolAmmoGranter.GrantItem(Agent)
                else:
                    NoAuraMessageDevice.Show(Agent) 


        #Shotgun and Ammo

    ShotgunGrant(Agent:agent):void=
         if(PlayerObj := player[Agent]):
            if(CustomPlayer:Custom_Player = PlayersMap[PlayerObj]):
                 DoWeHaveEnough:logic = CustomPlayer.CheckKarmaCredits(ShotgunCost)
                 if(DoWeHaveEnough = true):
                    CustomPlayer.RemoveKarmaCredits(ShotgunCost)
                    ShotgunGranter.GrantItem(Agent)
                else:
                    NoAuraMessageDevice.Show(Agent)    

    ShotgunAmmoGrant(Agent:agent):void=
         if(PlayerObj := player[Agent]):
            if(CustomPlayer:Custom_Player = PlayersMap[PlayerObj]):
                 DoWeHaveEnough:logic = CustomPlayer.CheckKarmaCredits(ShotgunAmmoCost)
                 if(DoWeHaveEnough = true):
                    CustomPlayer.RemoveKarmaCredits(ShotgunAmmoCost)
                    ShotgunAmmoGranter.GrantItem(Agent)
                else:
                    NoAuraMessageDevice.Show(Agent) 
                    
        #Sniper and Ammo

    SniperGrant(Agent:agent):void=
            if(PlayerObj := player[Agent]):
               if(CustomPlayer:Custom_Player = PlayersMap[PlayerObj]):
                    DoWeHaveEnough:logic = CustomPlayer.CheckKarmaCredits(SniperCost)
                    if(DoWeHaveEnough = true):
                       CustomPlayer.RemoveKarmaCredits(SniperCost)
                       SniperGranter.GrantItem(Agent)
                   else:
                       NoAuraMessageDevice.Show(Agent)    
   
    SniperAmmoGrant(Agent:agent):void=
            if(PlayerObj := player[Agent]):
               if(CustomPlayer:Custom_Player = PlayersMap[PlayerObj]):
                    DoWeHaveEnough:logic = CustomPlayer.CheckKarmaCredits(SniperAmmoCost)
                    if(DoWeHaveEnough = true):
                       CustomPlayer.RemoveKarmaCredits(SniperAmmoCost)
                       SniperAmmoGranter.GrantItem(Agent)
                   else:
                       NoAuraMessageDevice.Show(Agent) 


        #Katana
    KatanaGrant(Agent:agent):void=
            if(PlayerObj := player[Agent]):
               if(CustomPlayer:Custom_Player = PlayersMap[PlayerObj]):
                    DoWeHaveEnough:logic = CustomPlayer.CheckKarmaCredits(KatanaCost)
                    if(DoWeHaveEnough = true):
                       CustomPlayer.RemoveKarmaCredits(KatanaCost)
                       KatanaGranter.GrantItem(Agent)
                   else:
                       NoAuraMessageDevice.Show(Agent)    

        #MedKit
    MedKitGrant(Agent:agent):void=
            if(PlayerObj := player[Agent]):
               if(CustomPlayer:Custom_Player = PlayersMap[PlayerObj]):
                    DoWeHaveEnough:logic = CustomPlayer.CheckKarmaCredits(MedKitCost)
                    if(DoWeHaveEnough = true):
                       CustomPlayer.RemoveKarmaCredits(MedKitCost)
                       MedKitGranter.GrantItem(Agent)
                   else:
                       NoAuraMessageDevice.Show(Agent) 

        #GlowPowerup
    GlowGrant(Agent:agent):void=
            if(PlayerObj := player[Agent]):
               if(CustomPlayer:Custom_Player = PlayersMap[PlayerObj]):
                    DoWeHaveEnough:logic = CustomPlayer.CheckKarmaCredits(GlowCost)
                    if(DoWeHaveEnough = true):
                       CustomPlayer.RemoveKarmaCredits(GlowCost)
                       GlowActivation.Pickup(Agent)
                   else:
                       NoAuraMessageDevice.Show(Agent) 
        #DamagePowerup
    DamageGrant(Agent:agent):void=
            if(PlayerObj := player[Agent]):
               if(CustomPlayer:Custom_Player = PlayersMap[PlayerObj]):
                    DoWeHaveEnough:logic = CustomPlayer.CheckKarmaCredits(DamageCost)
                    if(DoWeHaveEnough = true):
                       CustomPlayer.RemoveKarmaCredits(DamageCost)
                       DamageUpgrade.Pickup(Agent)
                   else:
                       NoAuraMessageDevice.Show(Agent) 
 
                       

        #Y Collect Actions

    OnCollect(Agent:agent):void=
        if(PlayerObj:=player[Agent]):
            if(CustomPlayer:Custom_Player = PlayersMap[PlayerObj]):
                CustomPlayer.AddKarmaCredits(CollectibleValue)



        
        # Karma Farm

    OnKarmaCreditsTimer(Agent: ?agent):void=
        for(CustomPlayer : PlayersMap):
            CustomPlayer.AddKarmaCredits(TimerValue)
            

    RewardHouse(Agent: ?agent):void=
        for(CustomPlayer : PlayersMap):
            CustomPlayer.AddKarmaCredits(AuraRewardValue)

   
            

        block:




        



