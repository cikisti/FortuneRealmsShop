using { /Fortnite.com/Devices }
using { /Verse.org/Simulation }
using { /Fortnite.com/Characters }
using { /Verse.org/Random}
using { /Fortnite.com/Game }
using { /Fortnite.com/UI }
using { /UnrealEngine.com/Temporary/UI }
using { /UnrealEngine.com/Temporary/SpatialMath }
using { /UnrealEngine.com/Temporary/Diagnostics }
using { /Verse.org/Colors }

Custom_Player := class <unique>():
    StringToMessage<localizes>(value:string)<computes> : message = "{value}"

    Player:agent

    var KarmaCreditsScoreText : text_block = text_block{}
    var KarmaCredits:int = 0

    InitiateUI():void=
        set KarmaCreditsScoreText = text_block{DefaultText := StringToMessage ("Karma Credits: {KarmaCredits}"), DefaultTextColor:= NamedColors.White, DefaultShadowColor:=NamedColors.Purple}
        PlayerScoreWidget:canvas = CreateUserUI(KarmaCreditsScoreText)

        if(PlayerObj:=player [Player], PlayerUI := GetPlayerUI[PlayerObj]):
            PlayerUI.AddWidget(PlayerScoreWidget)

    CreateUserUI(ScoreTextBlock:text_block):canvas=
            UICanvas : canvas = canvas:
                Slots := array:
                    canvas_slot:
                        Anchors := anchors{Minimum := vector2 {X := 0.5, Y := 0.2}, Maximum := vector2{X := 0.5, Y := 0.2} }
                        Offsets := margin{Top := 0.0, Left := 0.0, Right := 0.0, Bottom := 0.0}
                        Alignment := vector2 {X := 0.5, Y := 0.0}
                        SizeToContent := true
                        Widget := overlay:
                            Slots := array:
                                overlay_slot:
                                    Widget := color_block:
                                        DefaultColor := NamedColors.Black
                                        DefaultOpacity := 0.1
                                        DefaultDesiredSize := vector2{X := 400.0, Y := 30.0}
                                overlay_slot:
                                    Widget := ScoreTextBlock

            return UICanvas

    AddKarmaCredits(Amount:int):void=
        set KarmaCredits += Amount
        UpdateUI()

    RemoveKarmaCredits(Amount:int):void=
        set KarmaCredits -= Amount
        UpdateUI()

    CheckKarmaCredits(Amount:int):logic=
        if(KarmaCredits < Amount):
            return false
        else:
            return true
    UpdateUI():void=
        KarmaCreditsScoreText.SetText(StringToMessage("Karma Credits: {KarmaCredits}"))


